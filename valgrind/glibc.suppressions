# nbd client library in userspace
# Copyright (C) 2013-2019 Red Hat Inc.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

# bindtextdomain leaks.
{
  glibc_1
  Memcheck:Leak
  ...
  fun:bindtextdomain
}

# pthread_exit.
{
  glibc_2
  Memcheck:Leak
  ...
  fun:pthread_exit
}

# Allow thread-local storage from pthread_create to leak.
{
  glibc_3
  Memcheck:Leak
  fun:calloc
  ...
  fun:_dl_allocate_tls
}

# Same as above, but for glibc 2.34.
{
  glibc_4
  Memcheck:Leak
  fun:malloc
  ...
  fun:allocate_dtv_entry
}

# This is another leak from pthread_create added in glibc 2.34.
{
  glibc_5
  Memcheck:Leak
  fun:malloc
  ...
  fun:__printf_chk
}

# Conditional jump or move depends on uninitialised value(s) in
# __GI___tunables_init
# https://sourceware.org/bugzilla/show_bug.cgi?id=28256
# Bug present in glibc 2.34 and fixed in 2.35.
#
# The second suppression below is basically caused by the same
# problem but manifests as an uninitialized value when copying
# the GLIBC_TUNABLES environment variable.
{
  glibc_6
  Memcheck:Cond
  fun:parse_tunables
  fun:__GI___tunables_init
}

{
  glibc_7
  Memcheck:Cond
  fun:strlen
  fun:strdup
  ...
  fun:enter_STATE_CONNECT_SA_START*
}
